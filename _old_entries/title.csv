"AConversationW%2FMF1%3ARefactoringWithMartinFowler","MartinFowlerとリファクタリング""AConversationW%2FMF2%3ADesignPrinciples%26CodeOwnership","設計原則とコード所有""AConversationW%2FMF2%3ADesignPrinciplesCodeOwnership","設計原則とコードの所有""AConversationW%2FMF3%3AEvolutionaryDesign","進化的設計""AConversationW%2FMF4%3AFlexibilityAndComplexity","柔軟性と複雑性""AConversationW%2FMF5%3ATest-DrivenDevelopment","テスト駆動開発について""AConversationW%2FMF6%3ATuningPerformanceAndProcess","パフォーマンスチューニングとプロセス""AConversationWithMartinFowler","AConversationWithMartinFowler""AbundantMutation","度重なる変異""AccessModifier","アクセス修飾子""AggregationAndComposition","集約とコンポジション""AgileCertification","アジャイル認定試験""AgileHandover","アジャイルな引継ぎ""AgileImposition","アジャイルの押し付け""Agiledox","Agiledox""AltNetConf","""AnecdotalEvidence","事例証拠""AnemicDomainModel","ドメインモデル貧血症""AppealToAuthority","虎の威を借りてみる""ApplicationBoundary","アプリケーション境界""ApplicationDatabase","アプリケーションデータベース""AssertionFreeTesting","AssertionFreeTesting""AssetCapture","財産確保""BBS","ご意見箱""BBS2003","""BBS2004","""BBS2005","""BallAndSocket","Contemporary insuran""BigScreen","大きな画面""BlueGreenDeployment","Many states require""BuildLanguage","ビルド言語""BuildingArchitect","建築家""BusinessReadableDSL","""C3","C3""CallSuper","superの呼び出し""CannotMeasureProductivity","生産性は計測不能""CatastrophicFailover","壊滅的フェールオーバー""ChangingOurConceptionOfDSLs","""ClockWrapper","ClockWrapper""Closure","クロージャ""Closures","Closures""CobolInference","CobolInference""CodeAsDocumentation","コードがドキュメントだ""CodeExamples","サンプルコード""CodeOwnership","コードの所有""CodeSmell","コードの臭い""CollectionClosureMethod","コレクションクロージャメソッド""CollectionsOnClassDiagrams","クラス図におけるコレクション""CommandOrientedInterface","コマンド指向インターフェイス""ContinuousDelivery","継続的デリバリー""ConversationalStories","対話的ストーリー""CourtesyImplementation","儀礼的実装""CurrencyAsValue","CurrencyAsValue""CustomerAffinity","顧客親近性""CustomerLoyaltySoftware","顧客ロイヤルティソフトウェア""DataModels","データモデル""DatabaseAndBuildTime","データベースとビルドタイム""DatabaseStyles","データベーススタイル""Datensparsamkeit","Datensparsamkeit""DebianJava","DebianJava""DecoratedCommand","DecoratedCommand""DecreedStories","命令的ストーリー""DefinitionOfRefactoring","リファクタリングの定義""DependencyAndAssociation","依存と関連""DependencyInjection","DependencyInjection""DeploymentPipeline","デプロイメントパイプライン""DerivedInformation","派生情報""DesignStaminaHypothesis","設計＝スタミナ説""Detestable","ディテスタブル""DevelopingPatternsOfEnterpriseSoftware","エンタープライズアプリケーション開発のパターン""DiffDebugging","diffデバッグ""DirectingAttitude","直轄主義""Diversity","多様性""DomainLogicAndSQL","ドメインロジックとSQL""DomainSpecificLanguage","ドメイン特化言語""DotVoting","ドット投票""DslBoundary","DSLの境界線""DslReadings","""DynamicTyping","ダイナミックタイピング""EnablingAttitude","委任主義""EncapsulatedCollection","カプセル化したコレクション""EnterpriseArchitecture","エンタープライズアーキテクチャ""EnterpriseRails","エンタープライズRails""ErraticTestFailure","テストが失敗したりしなかったり""EstimatedInterest","支払利息の見積もり""EtymologyOfRefactoring","リファクタリングの語源""EventInterception","イベントインターセプション""FaultyTechniqueDichotomy","欠陥技術の二分法""FeatureBranch","フィーチャブランチ""FineDetail","FineDetail""FirstLaw","第一の法則""FixedLengthString","固定長文字型""FixedPrice","固定価格""FixedScopeMirage","固定スコープの幻想""FlaccidScrum","ヘロヘロScrum""FluentInterface","流れるようなインタフェース""FoundationFramework","FoundationFramework""FrameworkBuilding","フレームワーク構築""FrontPage","FrontPage""FunctionalStaffOrganization","機能別組織""GangOfFour","GangOfFour""GroovyOrJRuby","""HarvestedFramework","HarvestedFramework""HeaderInterface","ヘッダーインタフェース""HierarchicDataModel","階層型データモデル""HistoryIsNotBunk","歴史はでたらめじゃない""HistoryOfIterativeDevelopment","反復開発の歴史""HollywoodPrinciple","ハリウッド原則""HumaneInterface","ヒューメイン・インタフェース""ImplicitInterfaceImplementation","暗黙的インタフェースの実装""InHandOrNot","InHandOrNot""InMemoryDatabase","""InMemoryTestDatabase","メモリ内データベース""IncludeAndExtend","includeとextend""InstallingDebian","Debianのインストール""IntegrationDatabase","統合データベース""IntelliCsharp","IntelliCsharp""InterWikiName","InterWikiName""InterfaceImplementationPair","インタフェースと実装のペア""InternalDslStyle","内部DSL""InversionOfControl","InversionOfControl""IsAgileForAll","アジャイルは誰のもの？""IsChangingInterfacesRefactoring","インタフェースの変更はリファクタリングか""IsDeclarationOrderingRefactoring","宣言の順序変更はリファクタリングか？""IsFixingAnUnknownBugRefactoring","未知のバグフィックスはリファクタリングか？""IsOptimizationRefactoring","最適化はリファクタリングか？""ItsNotJustStandingUp","朝会のパターン:立ってるだけじゃないよ""JAOO2005","""Japan","Japan""JunitNewInstance","Junit新インスタンス""KeywordList","KeywordList""KeywordListAgile","KeywordListAgile""KeywordListDesign","KeywordListDesign""KeywordListLeisure","KeywordListLeisure""KeywordListRefactoring","KeywordListRefactoring""KeywordListThougtWorks","KeywordListThougtWorks""KeywordListTools","KeywordListTools""KeywordListUml","KeywordListUml""KeywordListWriting","KeywordListWriting""Knoppix","Knoppix""LanguageForLearningObjects","オブジェクト指向を学ぶにはどの言語がよい？""LanguageWorkbench","""LanguageWorkbenchReadings","""LargeAgileProjects","大規模アジャイルプロジェクト""LayProgrammer","LayProgrammer""LayeringPrinciples","レイヤリングの原則""LimitationsOfGeneralAdvice","一般的な助言の限界""LocalDTO","ローカルDTO""LocalVariablesInClassDiagrams","クラス図におけるローカル変数""MDSDandDSL","MDSDとDSL""MakingStubs","スタブの生成""MeasuringProductivity","生産性を計測する""MetaProgrammingSystem","メタプログラミングシステム""MetaphoricQuestioning","メタファによる問いかけ""MinimalInterface","最小インタフェース""ModelDrivenArchitecture","モデル駆動型アーキテクチャ""ModelDrivenSoftwareDevelopment","モデル駆動ソフトウェア開発""MoreVersionControl","もっとVersionControlを！""MovingAwayFromXslt","XSLTから遠ざかる""MultipleCanonicalModels","複数の正規化モデル""MultipleDesktops","MultipleDesktops""MultiplicityNotCardinality","基数ではなく多重度""NetworkDataModel","ネットワーク型データモデル""OOPSLA2004","OOPSLA2004""OOPSLA2005","""ObjectMother","ObjectMother""ObjectsAndIteration","オブジェクト指向と反復開発""OnceUponaTimeInTheWest","ウェスタン""OneLanguage","1つの言語""OnsiteCustomer","オンサイト顧客""OpenIntellectualProperty","オープンな知的財産""OpenSourceResearch","オープンソースリサーチ""OrgPatternsWaterCooler","QuotesChimp are pres""POJO","POJO""ParserFear","パーサー恐怖症""PatternShare","PatternShare""PatternsAreNothingNew","パターンは新しいもんじゃない""PendingHead","ペンディングHEAD""PeopleMatterMost","いちばん大切なのは人""PeopleOriented","ピープル指向""PervasiveVersioning","""PlatformIndependentMalapropism","プラットフォーム独立の誤用""PleasingTheCustomer","顧客満足""PreferFunctionalStaffOrganization","やっぱり機能別組織が好き""PresentationDomainSeparation","プレゼンテーションとドメインの分離""PrinciplesOfXP","XPの原則""ProsAndConsOfLanguageOrientedProgramming","""ProtectedData","ProtectedData""ProvideServiceStub","サービススタブを提供する""PublicCsharpFields","PublicCsharpFields""PublishedInterface","公布済みインターフェイス""PurposeOfEstimation","見積もりの目的""QuestionTimePanel","Question Time方式の討論会""RailsConf2007","""ReadMe","お読みください""RefactoringBoundary","リファクタリングの境界線""RefactoringCringely","Cringelyをリファクタリング""RefactoringMalapropism","リファクタリングの誤用""RelationalDataModel","リレーショナル型データモデル""ReportingDatabase","レポーティングデータベース""ResourcePool","リソースプール""Rotation","ローテーション""RoysSocialExperiment","Royの社会的実験""RssFeeds","Rssフィード""RubyAnnotations","""RubyAtThoughtWorks","ThoughtWorksにおけるRuby""RubyMicrosoft","""RubyPeople","Rubyピープル""RubyPloticus","""Saba","Saba""SacrificialArchitecture","犠牲的アーキテクチャ""SchoolsOfSoftwareDevelopment","ソフトウェア開発の学派""ScopeLimbering","柔軟なスコープ""SecurityAndDesign","セキュリティと設計""Seedwork","シードワーク""SelfEncapsulation","自己カプセル化""SelfTestingCode","自己テストコード""SemanticConflict","意味的衝突""SemanticDiff","セマンティックdiff""SideMenu","SideMenu""SignatureSeriesCriteria","シグニチャシリーズの判断基準""SimpleRubySyntax","SimpleRubySyntax""Slimp3","Slimp3""SoftwareDevelopmentAttitude","ソフトウェア開発の心構え""SpecificationByExample","実例による仕様書""SpreadingIncrementalism","漸進主義の広まり""StandardStoryPoints","標準ストーリーポイント""StaticSubstitution","staticの置き換え""StickyTimeline","ポストイットタイムライン""StranglerApplication","ストラングラーアプリケーション""Subversion","Subversion""SunkCostDrivenArchitecture","回収不能コスト駆動型アーキテクチャ""Swebok","Swebok""SyntacticNoise","構文ノイズ""TechnicalDebt","技術的負債""TechnicalDebtQuadrant","技術的負債の四象限""TechnicalStaffOrganization","技術別組織""TestCoverage","TestCoverage""TestDouble","テストダブル""TestDrivenDevelopment","テスト駆動開発""TestSetup","TestSetup""TestingLanguage","テスト用言語""TestingResourcePools","テスティングリソースプール""TextFormattingRules","TextFormattingRules""ThoughtWorks","ThoughtWorks""ThoughtWorks2005","ThoughtWorks2005""ThoughtWorksChina","""ThrownEstimate","ジャンケン見積り""TouchFile","""ToyotaFailings","トヨタの欠陥""TypedCollection","型付きコレクション""Uml2","Uml2""UmlActivityDiagram","UMLアクティビティ図""UmlAsBlueprint","設計図としてのUML""UmlAsProgrammingLanguage","プログラミング言語としてのUML""UmlAsSketch","スケッチとしてのUML""UmlMode","UMLモード""UmlSketchingTools","UMLスケッチツール""UnitTest","UnitTest""UnwantedModelingLanguage","UnwantedModelingLanguage""UseCases","ユースケース""UseCasesAndStories","ユースケースとストーリー""UseOfXml","XMLの活用方法""ValueObject","バリューオブジェクト""VeryLowDefectProject","バグが超少ないプロジェクト""VotingMachines","電子投票機""Wardish","Wardish""Web2.0","""WhatIsFailure","失敗とは""WhatIsaBliki","Blikiとは""XPJUG20040419","XPJUG20040419""XpVelocity","XPの速度""Xunit","""YesterdaysWeather","昨日の天気"